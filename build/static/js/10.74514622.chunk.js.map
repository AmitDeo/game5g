{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","store/actions/quizBuilder.js","axios.js","components/GCards/SingleCard/SingleCard.module.scss","components/GCards/GCards.module.scss","components/GCards/SingleCard/SingleCard.js","components/GCards/GCards.js"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","TypeError","fetchQuestions","dispatch","type","actionTypes","axios","get","then","res","questions","fetchedQuestions","key","data","id","isAnswered","isAdvAnswered","userAnswer","userAdvAnswer","isCelebrated","catch","error","advancedMode","getQuestion","nxtQsn","getQuesn","startGame","incrementAttempt","isMissed","currentQuestion","missed","incAttmpt","incrementAdvAttempt","is_correct","incAdvAttmpt","finishGame","restartGame","updateSwipe","swipeObj","updateSwipeFunc","instance","create","baseURL","module","exports","SingleCard","props","singleCardRef","useRef","useState","classes","Graphic","xgClass","setXgClass","bottomText","setBottomText","bottomYear","setBottomYear","useDispatch","swipeState","useSelector","state","quizBuilder","useEffect","cardname","Graphic1G","Graphic2G","Graphic3G","Graphic4G","Graphic5G","quizBuilderActions","left","originalOffset","velocity","timeOfLastDragEvent","touchStartX","prevTouchX","beingTouched","height","intervalId","current","animateSlidingToZero","window","clearInterval","handleRemoveSelf","isNext","setTimeout","onSwipe","nextCard","getNextCard","handleStart","clientX","Date","now","handleMove","touchX","currTime","elapsed","deltaX","handleEnd","setInterval","handleMouseUp","className","ref","onTouchStart","touchStartEvent","preventDefault","targetTouches","handleTouchStart","onTouchMove","touchMoveEvent","handleTouchMove","onTouchEnd","onMouseDown","mouseDownEvent","handleMouseDown","onMouseMove","mouseMoveEvent","handleMouseMove","onMouseUp","onMouseLeave","InnerBox","style","position","transition","TitleText","opacity","GraphicContainer","join","BottomText","GCards","currentGCard","setCurrentGCard","gcards","location","selectorDots","arrowtoCard","selectedCard","dotLi","map","feature","index","ActiveDot","href","onClick","e","event","jumptoCard","SelectorDots","CardCarausel","CloseCarausel","history","pathname","closeCardCarausel","cardId","LeftArrow","RightArrow"],"mappings":"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","file":"static/js/10.74514622.chunk.js","sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import * as actionTypes from './actionTypes';\nimport axios from '../../axios';\n\n\nexport const fetchQuestionsSuccess = (questions) => {\n\treturn {\n\t\ttype: actionTypes.FETCH_QUESTIONS_SUCCESS,\n\t\tquestions: questions\n\t}\n}\n\nexport const fetchQuestionsFail = (error) => {\n\treturn {\n\t\ttype: actionTypes.FETCH_QUESTIONS_FAIL,\n\t\terror: error\n\t}\n}\n\n\nexport const fetchQuestionsStart = () => {\n\treturn {\n\t\ttype: actionTypes.FETCH_QUESTIONS_START\n\t}\n}\n\n\nexport const fetchQuestions = () => {\n\treturn dispatch => {\n\t\tdispatch(fetchQuestionsStart());\n\t\taxios.get('questions')\n\t\t .then(res => {\n\t\t \t\tconst fetchedQuestions = [];\n\t\t \t\tfor ( let key in res.data.data) {\n\t\t \t\t\tfetchedQuestions.push({\n\t\t \t\t\t\t...res.data.data[key],\n\t\t \t\t\t\tid: key,\n\t\t \t\t\t\tisAnswered: false,\n\t\t \t\t\t\tisAdvAnswered: false,\n\t\t \t\t\t\tuserAnswer: null,\n\t\t \t\t\t\tuserAdvAnswer: null,\n\t\t \t\t\t\tisCelebrated: false\n\t\t \t\t\t});\n\t\t \t\t}\n\t\t \t\tdispatch(fetchQuestionsSuccess(fetchedQuestions));\n\t\t })\n\t\t .catch(err => {\n\t\t \tdispatch(fetchQuestionsFail(err))\n\t\t });\n\t}\n}\n\n\nexport const turnAdvancedMode = () => {\n\treturn {\n\t\ttype: actionTypes.TOGGLE_ADVANCED\n\t}\n}\n\n\nexport const advancedMode = () => {\n\treturn dispatch => {\n\t\tdispatch(turnAdvancedMode());\n\t}\n}\n\n\nexport const getQuesn = (nxtQsn) => {\n\treturn {\n\t\ttype: actionTypes.GET_QUESTION,\n\t\tid: nxtQsn\n\t}\n}\n\n\nexport const getQuestion = (nxtQsn) => {\n\treturn dispatch => {\n\t\tdispatch(getQuesn(nxtQsn));\n\t}\n}\n\n\nexport const turnOnGame = () => {\n\treturn {\n\t\ttype: actionTypes.START_GAME\n\t}\n}\n\n\nexport const startGame = () => {\n\treturn dispatch => {\n\t\tdispatch(turnOnGame());\n\t}\n}\n\n\nexport const incAttmpt = (isMissed, currentQuestion, userAnswer) => {\n\treturn {\n\t\ttype: actionTypes.INCREMENT_ATTEMPT,\n\t\tmissed: isMissed,\n\t\tcurrentQuestion: currentQuestion,\n\t\tuserAnswer: userAnswer\n\t}\n}\n\nexport const incrementAttempt = (isMissed, currentQuestion, userAnswer) => {\n\treturn dispatch => {\n\t\tdispatch(incAttmpt(isMissed, currentQuestion, userAnswer));\n\t}\n}\n\n\nexport const incAdvAttmpt = (isMissed, currentQuestion, userAnswer,is_correct) => {\n\treturn {\n\t\ttype: actionTypes.INCREMENT_ADV_ATTEMPT,\n\t\tmissed: isMissed,\n\t\tcurrentQuestion: currentQuestion,\n\t\tuserAnswer: userAnswer,\n\t\tis_correct: is_correct\n\t}\n}\n\n\nexport const celebratedOnFunc = (currentQuestion) => {\n\treturn {\n\t\ttype: actionTypes.CELEBRATED_ON,\n\t\tcurrentQuestion: currentQuestion,\n\t}\n}\n\n\nexport const celebratedOn = (currentQuestion) => {\n\treturn dispatch => {\n\t\tdispatch(celebratedOnFunc(currentQuestion));\n\t}\n}\n\n\n\nexport const incrementAdvAttempt = (isMissed, currentQuestion, userAnswer, is_correct) => {\n\treturn dispatch => {\n\t\tdispatch(incAdvAttmpt(isMissed, currentQuestion, userAnswer, is_correct));\n\t}\n}\n\n\nexport const finishGameFunc = () => {\n\treturn {\n\t\ttype: actionTypes.FINISH_GAME\n\t}\n}\n\n\nexport const finishGame = () => {\n\treturn dispatch => {\n\t\tdispatch(finishGameFunc());\n\t}\n}\n\n\nexport const restartGameFunc = () => {\n\treturn {\n\t\ttype: actionTypes.RESTART_GAME\n\t}\n}\n\nexport const restartGame = () => {\n\treturn dispatch => {\n\t\tdispatch(restartGameFunc());\n\t}\n}\n\n\n\nexport const dragCardFunc = (isDragging, lastDraggedCard) => {\n\treturn {\n\t\ttype: actionTypes.DRAG_CARD,\n\t\tisDragging: isDragging,\n\t\tlastDraggedCard: lastDraggedCard,\n\t}\n}\n\nexport const dragCard = (isDragging, lastDraggedCard) => {\n\treturn dispatch => {\n\t\tdispatch(dragCardFunc(isDragging, lastDraggedCard));\n\t}\n}\n\n\nexport const updateSwipeFunc = (swipeObj) => {\n\treturn {\n\t\ttype: actionTypes.UPDATE_SWIPE_OBJECT,\n\t\tswipeObj: swipeObj,\n\t}\n}\n\nexport const updateSwipe = (swipeObj) => {\n\treturn dispatch => {\n\t\tdispatch(updateSwipeFunc(swipeObj));\n\t}\n}\n\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://dev-tbl8.pantheonsite.io/apis/quiz/'\n});\n\nexport default instance;\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SingleCard\":\"SingleCard_SingleCard__wAVX7\",\"InnerBox\":\"SingleCard_InnerBox__1ZB9Y\",\"TitleText\":\"SingleCard_TitleText__2ViUK\",\"GraphicContainer\":\"SingleCard_GraphicContainer__2XH5p\",\"BottomText\":\"SingleCard_BottomText__2eNtr\",\"Graphic\":\"SingleCard_Graphic__eio8m\",\"Graphic1G\":\"SingleCard_Graphic1G__3HOWC\",\"Graphic2G\":\"SingleCard_Graphic2G__3KeIi\",\"Graphic3G\":\"SingleCard_Graphic3G__3lMlE\",\"Graphic4G\":\"SingleCard_Graphic4G__yWG_c\",\"Graphic5G\":\"SingleCard_Graphic5G__3BN7w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CardCarausel\":\"GCards_CardCarausel__yQYe_\",\"CloseCarausel\":\"GCards_CloseCarausel__1yt3t\",\"LeftArrow\":\"GCards_LeftArrow__8R-az\",\"RightArrow\":\"GCards_RightArrow__23aS6\",\"SelectorDots\":\"GCards_SelectorDots__YT7qn\",\"ActiveDot\":\"GCards_ActiveDot__1JkdY\"};","import React, {useState, useEffect, useRef} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport classes from './SingleCard.module.scss';\nimport * as quizBuilderActions from '../../../store/actions/index'\n\nexport const SingleCard = (props) => {\n  \n  const singleCardRef = useRef(null);\n\n  const [xgClass, setXgClass] = useState([classes.Graphic]);\n  const [bottomText, setBottomText] = useState('');\n  const [bottomYear, setBottomYear] = useState('');\n  const dispatch = useDispatch();\n\n  const swipeState = useSelector(state => {\n\t\treturn state.quizBuilder.swipeState;\n  });\n\n  useEffect(() => {\n\n  \tswitch(props.cardname){\n  \t\tcase '1G':\n  \t\t\tsetXgClass([classes.Graphic, classes.Graphic1G]);\n  \t\t\tsetBottomText('Analog');\n        setBottomYear(\"1980's\");\n  \t\t\tbreak;\n  \t\tcase '2G':\n  \t\t\tsetXgClass([classes.Graphic, classes.Graphic2G]);\n  \t\t\tsetBottomText('Digital');\n        setBottomYear(\"1990's\");\n  \t\t\tbreak;\n  \t\tcase '3G':\n  \t\t\tsetXgClass([classes.Graphic, classes.Graphic3G]);\n  \t\t\tsetBottomText('Digital (CDMA)');\n        setBottomYear(\"2000's\");\n  \t\t\tbreak;\n  \t\tcase '4G':\n  \t\t\tsetXgClass([classes.Graphic, classes.Graphic4G]);\n  \t\t\tsetBottomText('LTE');\n        setBottomYear(\"2010's\");\n  \t\t\tbreak;\n  \t\tcase '5G':\n  \t\t\tsetXgClass([classes.Graphic, classes.Graphic5G]);\n  \t\t\tsetBottomText('NR');\n        setBottomYear('2019');\n  \t\t\tbreak;\n  \t\tdefault:\n  \t\t\tsetXgClass([classes.Graphic, classes.Graphic5G]);\n  \t\t\tsetBottomText('NR');\n        setBottomYear('2019');\n  \t\t\tbreak;\n  \t}\n\n\tdispatch(quizBuilderActions.updateSwipe({\n\t      left: 0,\n\t      originalOffset: 0,\n\t      velocity: 0,\n\t      timeOfLastDragEvent: 0,\n\t      touchStartX: 0,\n\t      prevTouchX: 0,\n\t      beingTouched: false,\n\t      height: 110,\n\t      intervalId: null\n\t    }));\n\n\n  },[props.cardname, singleCardRef.current]);\n\n  const animateSlidingToZero = () => {\n    let {left, velocity, beingTouched} = swipeState;\n    if (!beingTouched && left < -0.01) {\n      velocity += 10 * 0.033;\n      left += velocity;\n      if (left < -350) {\n        window.clearInterval(swipeState.intervalId);\n        handleRemoveSelf();\n      }\n      dispatch(quizBuilderActions.updateSwipe({\n\t\t\t...swipeState,\n      \t\tleft: left, \n      \t\tvelocity: velocity\n\t\t}));\n\n    } else if (!beingTouched) {\n\n      left = 0;\n      velocity = 0;\n      window.clearInterval(swipeState.intervalId);\n\n      dispatch(quizBuilderActions.updateSwipe({\n      \t\t...swipeState,\n      \t\tleft: left, \n      \t\tvelocity: velocity, \n      \t\tintervalId: null, \n      \t\toriginalOffset: 0\n      \t}\n     ));\n\n    }\n  }\n  \n  const getNextCard = (isNext)=> {\n  \tlet nextCard = false;\n\n  \tif(isNext)\n  \t{\n  \t\tswitch (props.cardname)\n\t  \t{\n\t  \t\tcase '1G':\n\t  \t\t\tnextCard = '2G';\n\t  \t\t\tbreak;\n\t  \t\tcase '2G':\n\t  \t\t\tnextCard = '3G';\n\t  \t\t\tbreak;\n\t  \t\tcase '3G':\n\t  \t\t\tnextCard = '4G';\n\t  \t\t\tbreak;\n\t  \t\tcase '4G':\n\t  \t\t\tnextCard = '5G';\n\t  \t\t\tbreak;\n\t  \t\tcase '5G':\n\t  \t\t\tnextCard = '1G';\n\t  \t\t\tbreak;\n\t  \t\tdefault:\n\t  \t\t\tnextCard = '1G';\n\t  \t\t\tbreak;\n\t  \t}\n  \t}\n  \telse\n  \t{\n  \t\tswitch (props.cardname)\n\t  \t{\n\t  \t\tcase '1G':\n\t  \t\t\tnextCard = '5G';\n\t  \t\t\tbreak;\n\t  \t\tcase '2G':\n\t  \t\t\tnextCard = '1G';\n\t  \t\t\tbreak;\n\t  \t\tcase '3G':\n\t  \t\t\tnextCard = '2G';\n\t  \t\t\tbreak;\n\t  \t\tcase '4G':\n\t  \t\t\tnextCard = '3G';\n\t  \t\t\tbreak;\n\t  \t\tcase '5G':\n\t  \t\t\tnextCard = '4G';\n\t  \t\t\tbreak;\n\t  \t\tdefault:\n\t  \t\t\tnextCard = '1G';\n\t  \t\t\tbreak;\n\t  \t}\n  \t}\n\n  \treturn nextCard;\n\n  };\n\n  const handleRemoveSelf = (isNext) => {\n    dispatch(quizBuilderActions.updateSwipe({\n\t    \t\t...swipeState,\n\t    \t\tleft: 0\n\t    }\n    ));\n\n    window.setTimeout(() => props.onSwipe(getNextCard(isNext)), 250);\n  }\n  \n  const handleStart = (clientX) => {\n  \t\n    if (swipeState.intervalId !== null) {\n      window.clearInterval(swipeState.intervalId);\n    }\n\n    dispatch(quizBuilderActions.updateSwipe({\n      ...swipeState,\t\n      timeOfLastDragEvent: Date.now(),\n      touchStartX: clientX,\n      beingTouched: true,\n      intervalId: null\n    }));\n\n  };\n  \n  const handleMove = (clientX) => {\n  \t\n    if (swipeState.beingTouched) {\n      const touchX = clientX;\n      const currTime = Date.now();\n      const elapsed = currTime - swipeState.timeOfLastDragEvent;\n      const velocity = 20 * (touchX - swipeState.prevTouchX) / elapsed;\n      let deltaX = touchX - swipeState.touchStartX + swipeState.originalOffset;\n      \n      if (deltaX < -50) {\n        handleRemoveSelf(true);\n      } else if (deltaX > 50) {\n        handleRemoveSelf(false);\n      }\n\n      dispatch(quizBuilderActions.updateSwipe({\n      \t...swipeState,\n        left: deltaX,\n        velocity,\n        timeOfLastDragEvent: currTime,\n        prevTouchX: touchX\n      }));\n    }\n  }\n \n  const handleEnd = () => {\n  \tdispatch(quizBuilderActions.updateSwipe({\n      ...swipeState,\t\n      touchStartX: 0,\n      beingTouched: false,\n      intervalId: window.setInterval(animateSlidingToZero(), 33)\n    }));\n  }\n  \n  const handleTouchStart = (touchStartEvent) => {\n    touchStartEvent.preventDefault();\n    handleStart(touchStartEvent.targetTouches[0].clientX);\n  }\n  \n  const handleTouchMove = (touchMoveEvent) => {\n    handleMove(touchMoveEvent.targetTouches[0].clientX);\n  }\n  \n  const handleTouchEnd = () => {\n    handleEnd();\n  }\n  \n  const handleMouseDown  = (mouseDownEvent) => {\n    mouseDownEvent.preventDefault();\n    handleStart(mouseDownEvent.clientX);\n  }\n  \n  const handleMouseMove = (mouseMoveEvent) => {\n    handleMove(mouseMoveEvent.clientX);\n  }\n  \n  const handleMouseUp = () => {\n    handleEnd();\n  }\n  \n  const handleMouseLeave = () => {\n    handleMouseUp();\n  }\n  \n\t\n\n\n  return (\n    <div \n    \tclassName={classes.SingleCard}\n    \tref={singleCardRef}\n    \t  onTouchStart={touchStartEvent => handleTouchStart(touchStartEvent)}\n        onTouchMove={touchMoveEvent => handleTouchMove(touchMoveEvent)}\n        onTouchEnd={() => handleTouchEnd()}\n        // The following event handlers are for mouse compatibility:\n        onMouseDown={mouseDownEvent => handleMouseDown(mouseDownEvent)}\n        onMouseMove={mouseMoveEvent => handleMouseMove(mouseMoveEvent)}\n        onMouseUp={() => handleMouseUp()}\n        onMouseLeave={() => handleMouseLeave()}\n    >\n    \t<div \n    \t\tclassName={classes.InnerBox}\n    \t\tstyle={\n          !swipeState.beingTouched ? \n          {\n            position: 'relative',\n            left: swipeState.left,\n            transition: 'all 250ms ease'\n          }\n          :\n          {\n            position: 'relative',\n            left: swipeState.left\n          }\n      }\n    \t>\n          <div className={classes.TitleText}>\n         \t  <h2 style={props.cardname == '5G' ? {opacity: 0} : {opacity: 1}}>{props.cardname}</h2>\n          </div>\n          <div className={classes.GraphicContainer}>\n         \t  <div className={xgClass.join(' ')}></div>\n          </div>\n          <div className={classes.BottomText}>\n         \t  <h3>{bottomText}</h3>\n         \t  <h4>{bottomYear}</h4>\n          </div>\n         </div> \n    </div>\n  );\n};\n\nexport default SingleCard;\n\n","import React, { useState, useEffect } from 'react';\n\nimport SingleCard from './SingleCard/SingleCard';\n\nimport classes from './GCards.module.scss';\n\nexport const GCards = (props) => {\n  \n  const [currentGCard, setCurrentGCard] = useState('1G');\n\n  const [gcards, setGCards] = useState(['1G', '2G', '3G', '4G', '5G']);\n\n  useEffect(() => {\n  \t\n  \tif(props.location.cardname)\n  \t{\n  \t\tsetCurrentGCard(props.location.cardname);\n  \t}\n\n  },[props.location.cardname, setCurrentGCard]); \n\n  const closeCardCarausel = (event)=> {\n  \tevent.preventDefault();\n \t\n \tprops.history.push({\n\t\tpathname: '/quiz'\n\t});\n\n  };\n\n\n  const jumptoCard = (event, index)=> {\n  \tevent.preventDefault();\n  \tsetCurrentGCard(index);\n  };\n\n  const arrowtoCard = (selectedCard, nextCard)=> {\n  \tif(nextCard)\n  \t{\n  \t\tswitch (selectedCard)\n\t  \t{\n\t  \t\tcase '1G':\n\t  \t\t\tnextCard = '2G';\n\t  \t\t\tbreak;\n\t  \t\tcase '2G':\n\t  \t\t\tnextCard = '3G';\n\t  \t\t\tbreak;\n\t  \t\tcase '3G':\n\t  \t\t\tnextCard = '4G';\n\t  \t\t\tbreak;\n\t  \t\tcase '4G':\n\t  \t\t\tnextCard = '5G';\n\t  \t\t\tbreak;\n\t  \t\tcase '5G':\n\t  \t\t\tnextCard = '1G';\n\t  \t\t\tbreak;\n\t  \t\tdefault:\n\t  \t\t\tnextCard = '1G';\n\t  \t\t\tbreak;\n\t  \t}\n  \t}\n  \telse\n  \t{\n  \t\tswitch (selectedCard)\n\t  \t{\n\t  \t\tcase '1G':\n\t  \t\t\tnextCard = '5G';\n\t  \t\t\tbreak;\n\t  \t\tcase '2G':\n\t  \t\t\tnextCard = '1G';\n\t  \t\t\tbreak;\n\t  \t\tcase '3G':\n\t  \t\t\tnextCard = '2G';\n\t  \t\t\tbreak;\n\t  \t\tcase '4G':\n\t  \t\t\tnextCard = '3G';\n\t  \t\t\tbreak;\n\t  \t\tcase '5G':\n\t  \t\t\tnextCard = '4G';\n\t  \t\t\tbreak;\n\t  \t\tdefault:\n\t  \t\t\tnextCard = '1G';\n\t  \t\t\tbreak;\n\t  \t}\n  \t}\n\n  \tsetCurrentGCard(nextCard);\n\n  };\n\n  const onSwipe = (cardId) => {\n  \tsetCurrentGCard(cardId);\n  }; \n\n  let selectorDots = null;\n\t  const dotLi = gcards.map((feature,index) => (\n\t\t\t\t<li \n\t\t\t\t\tkey={index}\n\t\t\t\t\tclassName={currentGCard === feature ? classes.ActiveDot : ''}>\n\t\t\t\t\t<a href=\"#\" onClick={(e) => jumptoCard(e,feature)}>\n\t\t\t\t\t\t{feature}\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t   ));\n\n\tselectorDots = (\n\t\t\t\t\t<ul className={classes.SelectorDots}>\n\t\t\t\t\t\t{dotLi}\n\t\t\t\t\t</ul>\n\t\t\t\t);\n\n\n  return (\n    <div className={classes.CardCarausel}>\n    \t<span className={classes.CloseCarausel} onClick={(event) => closeCardCarausel(event)}>Close</span>\n    \t<SingleCard cardname={currentGCard} onSwipe={(cardId) => onSwipe(cardId)}/>\n    \t{selectorDots}\n    \t{currentGCard !== '1G' && <span className={classes.LeftArrow} onClick={() => arrowtoCard(currentGCard)}>Left</span> }\n\t\t{currentGCard !== '5G' && <span className={classes.RightArrow} onClick={() => arrowtoCard(currentGCard, true )}>Right</span> }\n    </div>\n  );\n\n};\n\nexport default GCards;\n"],"sourceRoot":""}